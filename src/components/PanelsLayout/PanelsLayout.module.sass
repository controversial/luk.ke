@import '../../styles/colors.sass'
@import '../../styles/dimensions.sass'


.panels-layout
  position: relative
  // The width of the window, plus space for a menu on either side
  width: calc(100% + #{$menu-width} * 2)
  left: -$menu-width

  display: grid
  grid-template-rows: [top] minmax(100vh, min-content) [bottom] // at least window height; grow to fit content
  grid-template-columns: [menu-left] $menu-width [viewport-left] repeat(4, 1fr [fifth]) 1fr [viewport-right] $menu-width [menu-right]


  .panel.light
    position: sticky // Allows fixed position without removal from the grid layout
    z-index: 6
    top: 0
    height: 100vh
    grid-column: viewport-left / span 2 // this is overridden in JSX
    grid-row: top / bottom

    background: $white
    color: $black

  &.panel-full .panel.light
    position: relative
    height: auto
    min-height: 100vh
    overflow: hidden // take full height of content


  .panel.dark
    position: relative
    z-index: 5
    grid-column: fifth 2 / span 3 // this is overridden in JSX
    grid-row: top / bottom

    color: $white


  .panel .content
    padding-top: $nav-height
    overflow: hidden
    width: 100%
    min-height: 100%


  .nav-cover
    position: absolute
    top: 0
    left: 0
    width: 100%
    height: $nav-height
    z-index: 100

  .dark .nav-cover
    position: sticky
    margin-bottom: -$nav-height
    background: $black

  .light .nav-cover
    background: $white

  &.panel-full .light .nav-cover
    position: fixed


  \:global
    .menu
      position: sticky
      top: 0
      height: 100vh

      &.left
        grid-column: menu-left / viewport-left

      &.right
        grid-column: viewport-right / menu-right
